"0","lm_logpost <- function(unknowns, my_info)"
"0","{"
"0","  # specify the number of unknown beta parameters"
"0","  length_beta <- ncol(my_info$design_matrix)"
"0","  "
"0","  # extract the beta parameters from the `unknowns` vector"
"0","  beta_v <- unknowns[1:length_beta]"
"0","  "
"0","  # extract the unbounded noise parameter, varphi"
"0","  lik_varphi <- unknowns[length_beta+1]"
"0","  "
"0","  # back-transform from varphi to sigma"
"0","  lik_sigma <- exp(lik_varphi)"
"0","  "
"0","  # extract design matrix"
"0","  X <- my_info$design_matrix"
"0","  "
"0","  # calculate the linear predictor"
"0","  mu <- as.vector(X %*% as.matrix(beta_v))"
"0","  "
"0","  # evaluate the log-likelihood"
"0","  log_lik <- sum(dnorm(x = my_info$yobs, mean = mu, sd = lik_sigma, log = TRUE))"
"0","  "
"0","  # evaluate the log-prior"
"0","  log_prior_beta <- sum(dnorm(x = beta_v, mean = my_info$mu_beta, sd = my_info$tau_beta, log=TRUE))"
"0","  "
"0","  log_prior_sigma <- sum(dexp(x = lik_sigma, rate = my_info$sigma_rate, log = TRUE))"
"0","  "
"0","  # add the mean trend prior and noise prior together"
"0","  log_prior <- log_prior_beta + log_prior_sigma"
"0","  "
"0","  # account for the transformation"
"0","  log_derive_adjust <- lik_varphi"
"0","  "
"0","  # sum together"
"0","  return(log_lik + log_prior + log_derive_adjust)"
"0","}"
