"0","my_laplace <- function(start_guess, logpost_func, ...)"
"0","{"
"0","  # code adapted from the `LearnBayes`` function `laplace()`"
"0","  fit <- optim(start_guess,"
"0","               logpost_func,"
"0","               gr = NULL,"
"0","               ...,"
"0","               method = ""BFGS"","
"0","               hessian = TRUE,"
"0","               control = list(fnscale = -1, maxit = 1001))"
"0",""
"0","  mode <- fit$par"
"0","  post_var_matrix <- -solve(fit$hessian)"
"0","  p <- length(mode) # number of unknown parameters"
"0","  int <- p/2 * log(2 * pi) + 0.5 * log(det(post_var_matrix)) + logpost_func(mode, ...)"
"0","  # package all of the results into a list"
"0","  list(mode = mode,"
"0","       var_matrix = post_var_matrix,"
"0","       log_evidence = int,"
"0","       converge = ifelse(fit$convergence == 0,"
"0","                         ""YES"", "
"0","                         ""NO""),"
"0","       iter_counts = as.numeric(fit$counts[1]))"
"0","}"
