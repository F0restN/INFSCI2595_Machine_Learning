"0","calc_mae_from_laplace <- function(mvn_result, Xtrain, Xtest, y_train, y_test, num_samples)"
"0","{"
"0","  # generate posterior samples from the approximate MVN posterior"
"0","  post <- generate_lm_post_samples(mvn_result = mvn_result, length_beta = ncol(Xtrain), num_samples = num_samples)"
"0","  "
"0","  # make posterior predictions on the training set"
"0","  pred_train <- make_post_lm_pred(Xtrain, post)"
"0","  "
"0","  # make posterior predictions on the test set"
"0","  pred_test <- make_post_lm_pred(Xtest, post)"
"0","  "
"0","  # calculate the error between the training set predictions"
"0","  # and the training set observations"
"0","  error_train <- pred_train$Umat - y_train"
"0","  "
"0","  # calculate the error between the test set predictions"
"0","  # and the test set observations"
"0","  error_test <- pred_test$Umat - y_test"
"0","  "
"0","  # calculate the MAE on the training set"
"0","  mae_train <- colMeans(abs(error_train))"
"0","  "
"0","  # calculate the MAE on the test set"
"0","  mae_test <- colMeans(abs(error_test))"
"0","  "
"0","  # book keeping, package together the results"
"0","  mae_train_df <- tibble::tibble("
"0","    mae = mae_train"
"0","  ) %>% "
"0","    mutate(dataset = ""training"") %>% "
"0","    tibble::rowid_to_column(""post_id"")"
"0","  "
"0","  mae_test_df <- tibble::tibble("
"0","    mae = mae_test"
"0","  ) %>% "
"0","    mutate(dataset = ""test"") %>% "
"0","    tibble::rowid_to_column(""post_id"")"
"0","  "
"0","  # you must specify the order, J, associated with the spline model"
"0","  mae_train_df %>% "
"0","    bind_rows(mae_test_df) %>% "
"0","    mutate(J = ncol(Xtrain) - 1)"
"0","}"
